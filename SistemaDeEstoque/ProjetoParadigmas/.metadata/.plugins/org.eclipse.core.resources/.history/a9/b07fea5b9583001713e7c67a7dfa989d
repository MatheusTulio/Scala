import akka.actor._

object ProjetoParadigmas {
  //case class Listas(l : List[Double])
  case object MensagemLoja 
  case object MensagemEstoque
  case object AbriuLoja
  case object ProximoCliente
  
  
  class Estoque extends Actor {
    def receive = {
      case MensagemLoja => 
        Thread.sleep(15000)
        sender ! MensagemEstoque
    }
  }
  
  class Loja (estoque: ActorRef, nome : String) extends Actor {
    var numProdutos : Int  = 100
    
    def receive = {
      case l: List[Int] =>
        println("Atendendo Cliente na " + nome + "  ...")
        if (l.foldLeft(0)(_ + _) < 12)
          Thread.sleep(3000)
        else if(l.foldLeft(0)(_ + _) < 23)
          Thread.sleep(6000)
         else
           Thread.sleep(9000)
        this.setNumProdutos(this.getNumProdutos() - l.foldLeft(0)(_ + _))
        if (this.getNumProdutos() <= 25){
          println("Esperando produtos do estoque para a " + nome + " ...")
          estoque ! MensagemLoja
        }
        else if (this.getNumProdutos() <= 10){
          while(this.getNumProdutos() <= 10){
            println("Esperando produtos do estoque para a " + nome + " ...")
            Thread.sleep(2500)
          }
        }
        sender ! ProximoCliente
            
      case MensagemEstoque =>
        println("Os produtos da " + nome + " chegaram!")
        this.setNumProdutos(100)
    }
    
    def setNumProdutos(n : Int) : Unit = {
      this.numProdutos = n
    }
    
    def getNumProdutos() : Int = {
      this.numProdutos
    }
    
  }
  
  class Consumidor(loja: ActorRef, nomeLoja : String) extends Actor {
    var senha : Int = 1
    def receive = {
      case AbriuLoja =>
        println("Senha para atendimento na " + nomeLoja + " : "+ this.getSenha())
        loja ! List(0,1,2,3)
  
      case ProximoCliente =>
        println("Senha " + this.getSenha() + " foi atendida na " + nomeLoja)
        this.setSenha(this.getSenha() + 1)
        Thread.sleep(2500) // Aguarda o pr√≥ximo cliente chegar
        println("Senha para atendimento na " + nomeLoja + " : "+ this.getSenha())
        loja ! List(((Math.random()*100).toInt) % 9, ((Math.random()*100).toInt) % 9, ((Math.random()*100).toInt) % 9, ((Math.random()*100).toInt) % 9 )
    }
    
    def setSenha(s : Int) : Unit = {
      this.senha = s
    }
    
    def getSenha() : Int = {
      this.senha
    }
  }
  
  def main (args : Array[String]) : Unit = {
    val system = ActorSystem("System")
    val estoque = system.actorOf(Props[Estoque], name = "estoque")
    val loja1 = system.actorOf(Props(new Loja(estoque, "Loja1")),name = "loja1")
    val loja2 = system.actorOf(Props(new Loja(estoque, "Loja2")),name = "loja2")
    val consumidor1 = system.actorOf(Props(new Consumidor(loja1, "Loja1")), name = "consumidor1")
    val consumidor2 = system.actorOf(Props(new Consumidor(loja2, "Loja2")), name = "consumidor2")
    consumidor1 ! AbriuLoja
    consumidor2 ! AbriuLoja
   }
}